{"version":3,"sources":["assets/img sync /^/.//.*$","assets/img/bear.png","assets/img/beaver.png","assets/img/cat.png","assets/img/chick.png","assets/img/chicken.png","assets/img/cow.png","assets/img/dog.png","assets/img/donkey.png","assets/img/duck.png","assets/img/elephant.png","assets/img/lion.png","assets/img/monkey.png","assets/img/penguin.png","assets/img/pig.png","assets/img/walrus.png","assets/img/zebra.png","components/cardComponent.js","components/field.js","components/topMenu.js","components/messageDialog.js","components/startDialog.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardComponent","props","cardClick","className","this","card","isFlipped","onClick","index","src","require","imgUrl","React","Component","Field","cards","item","i","key","renderField","TopMenu","restartGame","restart","settingsChange","settings","count","MessageDialog","style","display","message","StartDialog","modeRef","createRef","cardsRef","onSubmit","submit","preventDefault","current","value","ref","defaultValue","type","MemoryGame","deck","state","y","size","gameMode","selectedCardIndex","startTurnCount","turnCount","pairNumber","gameStarted","gameFinished","canSneak","pairCount","setState","cloneDeep","document","onkeydown","sneakPeak","bind","startGame","stateCopy","Array","cardImg","getRandomInt","length","randomInt","getFreeCardIndexes","isPaired","setTimeout","flipUp","freeCardIndexes","undefined","push","min","max","Math","floor","random","event","keyCode","randomCardIndex","sneak","cardsNumber","parseInt","Helmet","onCardClick","onStartMenuSubmit","href","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bb53ca8f.chunk.js","sourcesContent":["var map = {\n\t\"./bear.png\": 25,\n\t\"./beaver.png\": 26,\n\t\"./cat.png\": 27,\n\t\"./chick.png\": 28,\n\t\"./chicken.png\": 29,\n\t\"./cow.png\": 30,\n\t\"./dog.png\": 31,\n\t\"./donkey.png\": 32,\n\t\"./duck.png\": 33,\n\t\"./elephant.png\": 34,\n\t\"./lion.png\": 35,\n\t\"./monkey.png\": 36,\n\t\"./penguin.png\": 37,\n\t\"./pig.png\": 38,\n\t\"./walrus.png\": 39,\n\t\"./zebra.png\": 40\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/bear.1948aa56.png\";","module.exports = __webpack_public_path__ + \"static/media/beaver.53e1f155.png\";","module.exports = __webpack_public_path__ + \"static/media/cat.5ef3ecae.png\";","module.exports = __webpack_public_path__ + \"static/media/chick.a7c276c8.png\";","module.exports = __webpack_public_path__ + \"static/media/chicken.3d53cc0c.png\";","module.exports = __webpack_public_path__ + \"static/media/cow.34c75b47.png\";","module.exports = __webpack_public_path__ + \"static/media/dog.92719be5.png\";","module.exports = __webpack_public_path__ + \"static/media/donkey.1b3936b6.png\";","module.exports = __webpack_public_path__ + \"static/media/duck.c539fc3d.png\";","module.exports = __webpack_public_path__ + \"static/media/elephant.11075bbf.png\";","module.exports = __webpack_public_path__ + \"static/media/lion.0f6b2638.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.e92ffeb9.png\";","module.exports = __webpack_public_path__ + \"static/media/penguin.73cfdfe5.png\";","module.exports = __webpack_public_path__ + \"static/media/pig.566e5ee9.png\";","module.exports = __webpack_public_path__ + \"static/media/walrus.6033f744.png\";","module.exports = __webpack_public_path__ + \"static/media/zebra.495c1851.png\";","import React from \"react\"\n\nexport default class CardComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cardClick = this.props.cardClick;\n    }\n\n    render() {\n        return (\n            <div className={this.props.card.isFlipped ? \"card flip-container\" : \"card flip-container backside\"} onClick={() => {\n                this.cardClick(this.props.card.index);\n            }}>\n                <div className=\"flipper\">\n                    <div className=\"front\">\n                        <img className=\"card-image\" src={require(\"../assets/img/\" + (this.props.card.imgUrl ? this.props.imgUrl : \"bear.png\"))}></img>\n                    </div>\n                    <div className=\"back\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CardComponent from \"./cardComponent\"\n// import { cloneDeep } from 'lodash'\n\nexport default class Field extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.cardClick = this.props.cardClick;\n    }\n\n    renderField() {\n        return this.props.cards.map((item, i) => {\n            return <CardComponent key={item.imgUrl + i} card={{ ...item, index: i }} imgUrl={item.imgUrl} cardClick={this.cardClick} />\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"mg-field\">\n                {this.renderField()}\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class TopMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.restartGame = this.props.restart;\n        this.settingsChange = this.props.settings;\n    }\n\n    render() {\n        return (\n            <div className=\"menu topMenu\">\n                <div>Memory Game</div>\n                <div className=\"df\">\n                    <div className=\"turnCount mr10\">Turns: <span id=\"count\">{this.props.count}</span></div>\n                    <button className=\"restartButton btn mr10\" onClick={this.restartGame}>Restart</button>\n                    <button className=\"btn\" onClick={this.settingsChange}>Settings</button>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class MessageDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.restartGame = this.props.restart;\n    }\n\n    render() {\n        return (\n            <div>\n\n                <div className=\"blockingLayer\" id=\"blockingLayer\"></div>\n\n\n                <div id=\"message-gameOver-win\" className=\"message\" style={{display: this.props.message === \"win\" ? \"block\" : \"none\"}}>\n                    <div className=\"message-shade\"></div>\n                    <div className=\"message-content endGame\">\n                        <h1 className=\"mb10\">Game over!</h1>\n                        <div className=\"mb10\">You won!</div>\n                        <button className=\"btn\" onClick={this.restartGame}>Want to restart?</button>\n                    </div>\n                </div>\n                <div id=\"message-gameOver-loss\" className=\"message\" style={{display: this.props.message === \"loss\" ? \"block\" : \"none\"}}>\n                    <div className=\"message-shade\"></div>\n                    <div className=\"message-content endGame\">\n                        <h1 className=\"mb10\">Game over!</h1>\n                        <div className=\"mb10\">You lose!</div>\n                        <button className=\"btn\" onClick={this.restartGame}>Want to restart?</button>\n                    </div>\n                </div>\n                <div id=\"message-gameOver\" className=\"message\" style={{display: this.props.message === \"over\" ? \"block\" : \"none\"}}>\n                    <div className=\"message-shade\"></div>\n                    <div className=\"message-content endGame\">\n                        <h1 className=\"mb10\">Game over!</h1>\n                        <div className=\"mb10\" id=\"score\"></div>\n                        <div className=\"mb10\" id=\"status\"></div>\n                        <button className=\"btn\" onClick={this.restartGame}>Want to restart?</button>\n                    </div>\n                </div>\n\n                <div id=\"message-getReady\" className=\"message\" style={{display: this.props.message === \"ready\" ? \"block\" : \"none\"}}>\n                    <div className=\"message-shade\"></div>\n                    <div className=\"message-content endGame\">\n                        <h1>Get ready!</h1>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class StartDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.modeRef = React.createRef();\n        this.cardsRef = React.createRef();\n\n        this.onSubmit = this.props.submit;\n    }\n\n    render() {\n        return (\n            <div className=\"message\" style={{ display: this.props.message === \"start\" ? \"block\" : \"none\" }}>\n                <div className=\"message-shade\"></div>\n                <form onSubmit={(e) => {\n                    e.preventDefault();\n                    this.onSubmit(this.modeRef.current.value, this.cardsRef.current.value);\n                }} className=\"message-content start-dialog-content\">\n                    <h1 className=\"mb10\">Select game mode</h1>\n                    <select className=\"mb20\" ref={this.modeRef}>\n                        <option value={0}>Limited turns</option>\n                        <option value={1}>Unlimited turns</option>\n                    </select>\n\n                    <input className=\"mb10\" ref={this.cardsRef} defaultValue={12} type=\"number\" className=\"mb10\" placeholder=\"Number of cards\"></input>\n                    <br></br><button className=\"btn\">Start playing</button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport './App.css';\nimport Field from \"./components/field\"\nimport TopMenu from \"./components/topMenu\"\nimport MessageDialog from \"./components/messageDialog\"\nimport StartDialog from \"./components/startDialog\"\nimport { cloneDeep } from 'lodash'\n\nlet siteTitle = \"Memory Game\";\nclass Card {\n\n  isFlipped = false;\n  isPaired = false;\n  imgUrl = \"\";\n\n  /**\n   * @param {string} img \n   */\n  constructor(img) {\n    this.imgUrl = img;\n  }\n\n}\n\nclass MemoryGame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deck = [\n      'bear.png',\n      'beaver.png',\n      'cat.png',\n      'chick.png',\n      'chicken.png',\n      'cow.png',\n      'dog.png',\n      'donkey.png',\n      'duck.png',\n      'elephant.png',\n      'lion.png',\n      'monkey.png',\n      'penguin.png',\n      'pig.png',\n      'walrus.png',\n      'zebra.png'\n    ];\n    this.state = {\n      y: this.props.size ? this.props.size : 16,\n      gameMode: 0,\n      selectedCardIndex: null,\n      startTurnCount: (this.props.size ? this.props.size * 2 : 24),\n      turnCount: (this.props.size ? this.props.size * 2 : 24),\n      pairNumber: 0,\n      message: \"start\",\n      cards: [],\n      gameStarted: false,\n      gameFinished: false,\n      canSneak: true\n    }\n    this.pairCount = this.state.y / 2;\n  }\n\n  componentDidUpdate() {\n    if (!this.state.gameFinished && this.state.pairNumber === this.pairCount) {\n      this.setState({ ...cloneDeep(this.state), message: \"win\", gameFinished: true });\n    }\n    if (!this.state.gameFinished && this.state.gameMode === 0 && this.state.turnCount === 0) {\n      this.setState({ ...cloneDeep(this.state), message: \"loss\", gameFinished: true });\n    }\n    if (!this.state.gameStarted && this.state.message !== \"start\") {\n      document.onkeydown = this.sneakPeak.bind(this);\n      this.startGame();\n    }\n  }\n\n  startGame() {\n    let stateCopy = cloneDeep(this.state);\n    this.pairCount = this.state.y / 2;\n    stateCopy.gameFinished = false;\n    if (stateCopy.gameMode === 0) {\n      stateCopy.turnCount = stateCopy.startTurnCount;\n    }\n    else if (stateCopy.gameMode === 1) {\n      stateCopy.turnCount = 0;\n    }\n    stateCopy.selectedCardIndex = null;\n    stateCopy.cards = new Array(this.state.y);\n    stateCopy.pairNumber = 0;\n    for (let i = 0; i < this.pairCount; i++) {\n      let cardImg = this.deck[this.getRandomInt(0, this.deck.length - 1)];\n      let randomInt = this.getFreeCardIndexes(stateCopy.cards)[this.getRandomInt(0, this.getFreeCardIndexes(stateCopy.cards).length - 1)];\n      stateCopy.cards[randomInt] = { isFlipped: true, isPaired: false, imgUrl: cardImg };\n      randomInt = this.getFreeCardIndexes(stateCopy.cards)[this.getRandomInt(0, this.getFreeCardIndexes(stateCopy.cards).length - 1)];\n      stateCopy.cards[randomInt] = { isFlipped: true, isPaired: false, imgUrl: cardImg };\n    }\n    stateCopy.message = \"ready\";\n    stateCopy.gameStarted = true;\n    \n    setTimeout(() => {\n      let stateCopy = cloneDeep(this.state);\n      for (let i = 0; i < stateCopy.cards.length; i++) {\n        stateCopy.cards[i].isFlipped = false;\n      }\n      this.setState({ ...cloneDeep(stateCopy), message: \"\" })\n    }, 1000);\n    this.setState({ ...cloneDeep(stateCopy) });\n\n  }\n\n  onCardClick(index) {\n    this.flipUp(index);\n    setTimeout(() => {\n      this.cardClick(index);\n    }, 500);\n  }\n\n  sneak(index) {\n    let stateCopy = cloneDeep(this.state);\n    let cards = stateCopy.cards;\n    cards[index].isFlipped = true;\n    stateCopy.canSneak = false;\n    this.setState(stateCopy);\n  }\n\n  flipUp(index) {\n    let stateCopy = cloneDeep(this.state);\n    let cards = stateCopy.cards;\n    cards[index].isFlipped = true;\n    if (stateCopy.gameMode === 0 && stateCopy.selectedCardIndex !== index && !stateCopy.cards[index].isPaired) {\n      stateCopy.turnCount -= 1;\n    }\n    else if (stateCopy.gameMode === 1 && stateCopy.selectedCardIndex !== index && !stateCopy.cards[index].isPaired) {\n      stateCopy.turnCount += 1;\n    }\n    this.setState(stateCopy);\n  }\n\n  cardClick(index) {\n    let stateCopy = cloneDeep(this.state);\n    let cards = stateCopy.cards;\n    cards[index].isFlipped = true;\n\n    if (stateCopy.selectedCardIndex === index) {\n      return;\n    }\n    if (stateCopy.message !== \"\") {\n      return;\n    }\n    if (cards[index].isPaired) {\n      return;\n    }\n    if (stateCopy.selectedCardIndex === null) {\n      stateCopy.selectedCardIndex = index;\n    } else {\n      if (cards[stateCopy.selectedCardIndex].imgUrl === cards[index].imgUrl) {\n        cards[stateCopy.selectedCardIndex].isPaired = true;\n        cards[index].isPaired = true;\n        stateCopy.selectedCardIndex = null;\n        stateCopy.pairNumber += 1;\n      }\n      else {\n        cards[stateCopy.selectedCardIndex].isFlipped = false;\n        cards[index].isFlipped = false;\n        stateCopy.selectedCardIndex = null;\n      }\n\n    }\n    this.setState(stateCopy);\n  }\n\n  getFreeCardIndexes(cards) {\n    let freeCardIndexes = [];\n\n    for (let i = 0; i < cards.length; i++) {\n      if (cards[i] === undefined) freeCardIndexes.push(i);\n    }\n    return freeCardIndexes;\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  sneakPeak(event) {\n    if (event.keyCode !== 83) return;\n    let stateCopy = cloneDeep(this.state);\n    let freeCardIndexes = [];\n\n    for (let i = 0; i < stateCopy.cards.length; i++) {\n      if (stateCopy.cards[i].isFlipped === false) freeCardIndexes.push(i);\n    }\n    if (freeCardIndexes.length === 0) return;\n    let randomCardIndex = freeCardIndexes[this.getRandomInt(0, freeCardIndexes.length - 1)];\n    this.sneak(randomCardIndex);\n    setTimeout(() => {\n      stateCopy.canSneak = true;\n      stateCopy.cards[randomCardIndex].isFlipped = false;\n      this.setState({ ...cloneDeep(stateCopy) });\n    }, 500);\n  }\n\n  settingsChange() {\n    let stateCopy = cloneDeep(this.state);\n    stateCopy.message = \"start\";\n    stateCopy.gameStarted = false;\n    this.setState({...cloneDeep(stateCopy)});\n  }\n\n  onStartMenuSubmit(gameMode, cardsNumber) {\n    let stateCopy = cloneDeep(this.state);\n    stateCopy.gameMode = gameMode ? parseInt(gameMode) : 0;\n    stateCopy.y = cardsNumber ? parseInt(cardsNumber) : 16;\n    stateCopy.startTurnCount = parseInt(gameMode) === 0 ? stateCopy.y * 2 : 0;\n    stateCopy.turnCount = parseInt(gameMode) === 0 ? stateCopy.y * 2 : 0;\n    stateCopy.message = \"\";\n\n    this.setState({ ...cloneDeep(stateCopy) });\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <Helmet>\n          <title>{siteTitle}</title>\n        </Helmet>\n        <div className=\"mg-container\">\n          <TopMenu count={this.state.turnCount} restart={this.startGame.bind(this)} settings={this.settingsChange.bind(this)} />\n          <Field cardClick={this.onCardClick.bind(this)} cards={this.state.cards} />\n          <MessageDialog restart={this.startGame.bind(this)} message={this.state.message} />\n          <StartDialog message={this.state.message} submit={this.onStartMenuSubmit.bind(this)} />\n          <div className=\"mg-copyright\">\n            Coded by <a href=\"https://github.com/NikitaAseev\" target=\"_blank\">Aseev Nikita</a>, Illustartions by <a href=\"http://www.freepik.com\" target=\"_blank\">Freepik</a>\n          </div>\n        </div>\n\n        <script src=\"main.js\"></script>\n      </div>\n    )\n  }\n}\n\nexport default MemoryGame;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}